(declare-fun $n () Int)
(declare-fun ADDR!1 () Int)
(declare-fun ADDR!2 () Int)
(declare-fun MEM!1 () Int)
(declare-fun MEM!2 () Int)
(declare-fun ap!<root>@4 () Int)
(declare-fun fp!<root> () Int)
(declare-fun prime () Int)
(assert (and (<= 0 $n) (< $n prime)))
(assert (and (<= 0 ADDR!1) (< ADDR!1 prime)))
(assert (and (<= 0 ADDR!2) (< ADDR!2 prime)))
(assert (and (<= 0 MEM!1) (< MEM!1 prime)))
(assert (and (<= 0 MEM!2) (< MEM!2 prime)))
(assert (and (<= 0 ap!<root>@4) (< ap!<root>@4 prime)))
(assert (and (<= 0 fp!<root>) (< fp!<root> prime)))
(assert (= prime 3618502788666131213697322783095070105623107215331596699973092056135872020481))
(assert (=> (= ADDR!1 ADDR!2) (= MEM!1 MEM!2)))
(assert (= ADDR!1 (mod (+ fp!<root> (- 3)) prime)))
(assert (= ADDR!2 ap!<root>@4))
(assert (<= fp!<root> ap!<root>@4))
(assert (and (= MEM!1 $n) (= ap!<root>@4 fp!<root>)))
(assert (= (mod (+ MEM!1 1) prime) MEM!2))
(assert true)
(assert (not (exists (($n Int)) (and (<= 0 $n) (< $n prime) (= MEM!2 (mod (+ $n 1) prime))))))