(declare-fun ADDR!1 () Int)
(declare-fun ADDR!2 () Int)
(declare-fun MEM!1 () Int)
(declare-fun MEM!2 () Int)
(declare-fun ap!<root>@8 () Int)
(declare-fun fp!<24=alloc/root> () Int)
(declare-fun fp!<root> () Int)
(declare-fun prime () Int)
(assert (and (<= 0 ADDR!1) (< ADDR!1 prime)))
(assert (and (<= 0 ADDR!2) (< ADDR!2 prime)))
(assert (and (<= 0 MEM!1) (< MEM!1 prime)))
(assert (and (<= 0 MEM!2) (< MEM!2 prime)))
(assert (and (<= 0 ap!<root>@8) (< ap!<root>@8 prime)))
(assert (and (<= 0 fp!<24=alloc/root>) (< fp!<24=alloc/root> prime)))
(assert (and (<= 0 fp!<root>) (< fp!<root> prime)))
(assert (= prime 3618502788666131213697322783095070105623107215331596699973092056135872020481))
(assert (=> (= ADDR!1 ADDR!2) (= MEM!1 MEM!2)))
(assert (= ADDR!1 ap!<root>@8))
(assert (= ADDR!2 (mod (+ ap!<root>@8 1) prime)))
(assert (<= fp!<root> ap!<root>@8))
(assert (= ap!<root>@8 fp!<root>))
(assert (and (= fp!<24=alloc/root> (mod (+ ap!<root>@8 2) prime)) (= MEM!1 fp!<root>) (= MEM!2 26)))
(assert (< ap!<root>@8 (mod (+ ap!<root>@8 3) prime)))
(assert false)
(check-sat)